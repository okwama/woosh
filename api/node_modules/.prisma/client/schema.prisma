generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  phoneNumber  String        @unique
  password     String
  journeyPlans JourneyPlan[]
  orders       Order[]
  tokens       Token[]

  Report Report[]
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "Token_userId_fkey")
}

model Outlet {
  id           Int           @id @default(autoincrement())
  name         String
  address      String
  latitude     Float?
  longitude    Float?
  journeyPlans JourneyPlan[]
  orders       Order[]

  Report Report[]
}

model Order {
  id        Int      @id @default(autoincrement())
  product   String
  quantity  Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  outletId  Int
  user      User     @relation(fields: [userId], references: [id])
  outlet    Outlet   @relation(fields: [outletId], references: [id])
  Report    Report[]

  @@index([userId], map: "Order_userId_fkey")
}

model JourneyPlan {
  id          Int       @id @default(autoincrement())
  date        DateTime
  time        String
  userId      Int?
  outletId    Int
  status      Int       @default(0) // 0 for pending, 1 for checked in
  checkInTime DateTime?
  latitude    Float?
  longitude   Float?
  imageUrl    String?
  outlet      Outlet    @relation(fields: [outletId], references: [id])
  user        User?     @relation(fields: [userId], references: [id])

  @@index([outletId], map: "JourneyPlan_outletId_fkey")
  @@index([userId], map: "JourneyPlan_userId_fkey")
}

model NoticeBoard {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Report {
  id              Int      @id @default(autoincrement())
  orderId         Int
  product         String
  quantity        Int
  outletId        Int
  outletName      String
  outletAddress   String
  createdAt       DateTime @default(now())
  totalSalesValue Float
  stockLevel      Int
  reorderLevel    Int
  salesDate       DateTime
  userId          Int
  inventoryStatus String

  order  Order  @relation(fields: [orderId], references: [id])
  outlet Outlet @relation(fields: [outletId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@index([orderId], map: "Report_orderId_fkey")
  @@index([userId], map: "Report_userId_fkey")
  @@index([outletId], map: "Report_outletId_fkey")
}
